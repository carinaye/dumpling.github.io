{"ast":null,"code":"var _jsxFileName = \"/Users/CarinaYe/gaTest/homework-and-materials/carina/final/dumpling/src/components/Contact/contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const restaurantName = \"Yang’s Dumpling\";\n  const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurantInfo, setRestaurantInfo] = useState(null);\n  const handleCityChange = event => {\n    setSelectedCity(event.target.value);\n  };\n  useEffect(() => {\n    if (selectedCity) {\n      const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}+${encodeURIComponent(selectedCity)}&key=${API_KEY}`;\n      fetch(url).then(response => response.json()).then(data => {\n        if (data.results.length > 0) {\n          const placeId = data.results[0].place_id;\n          console.log(data.results);\n          const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n          fetch(detailsUrl).then(response => response.json()).then(placeDetails => {\n            setRestaurantInfo(placeDetails.result);\n          }).catch(error => console.error(\"Error fetching place details:\", error));\n        } else {\n          console.log(\"No results found for the restaurant name.\");\n        }\n      }).catch(error => console.error(\"Error fetching place search results:\", error));\n    }\n  }, [API_KEY, selectedCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: handleCityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Melbourne\",\n        children: \"Melbourne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sydney\",\n        children: \"Sydney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Perth\",\n        children: \"Perth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), restaurantInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: restaurantInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", restaurantInfo.formatted_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact Number: \", restaurantInfo.formatted_phone_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a city to find a restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"sPWclbF0lye20pSRqOYDCcSs9cg=\");\n_c = Contact;\nexport default Contact;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const Contact = () => {\n//   const restaurantName = \"Yang’s Dumpling\";\n//   const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [restaurantInfo, setRestaurantInfo] = useState(null);\n//   const handleCityChange = (event) => {\n//     setSelectedCity(event.target.value);\n//   };\n\n//   useEffect(() => {\n//     const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}&radius=50000&key=${API_KEY}`;\n\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => {\n//         if (data.results.length > 0) {\n//           const placeId = data.results[0].place_id;\n//           console.log(data.results)\n\n//           const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n\n//           fetch(detailsUrl)\n//             .then(response => response.json())\n//             .then(placeDetails => {\n//               setRestaurantInfo(placeDetails.result);\n//             })\n//             .catch(error => console.error(\"Error fetching place details:\", error));\n//         } else {\n//           console.log(\"No results found for the restaurant name.\");\n//         }\n//       })\n//       .catch(error => console.error(\"Error fetching place search results:\", error));\n//   }, []);\n\n//   return (\n//     <div>\n//       {restaurantInfo ? (\n//         <div>\n//           <h1>{restaurantInfo.name}</h1>\n//           <p>Address: {restaurantInfo.formatted_address}</p>\n//         </div>\n//       ) : (\n//         <p>Loading restaurant information...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Contact;\n\n// const restaurantName = \"Yang’s Dumpling\";\n// const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\n// const Contact = () => {\n//   console.log(API_KEY)\n//   const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}&key=${API_KEY}`;\n\n//   fetch(url)\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log(data)\n//       if (data.results.length > 0) {\n//         const placeId = data.results[0].place_id;\n\n//         const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n\n//         fetch(detailsUrl)\n//           .then(response => response.json())\n//           .then(placeDetails => {\n//             console.log(placeDetails)\n//             console.log(\"Place ID:\", placeId);\n//             console.log(\"Name:\", placeDetails.result.name);\n//             console.log(\"Address:\", placeDetails.result.formatted_address);\n//           })\n//           .catch(error => console.error(\"Error fetching place details:\", error));\n//       } else {\n//         console.log(\"No results found for the restaurant name.\");\n//       }\n//     })\n//     .catch(error => console.error(\"Error fetching place search results:\", error));\n// }\n\n// export default Contact\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Contact","_s","restaurantName","API_KEY","process","env","REACT_APP_GOOGLE_MAP_API_KEY","selectedCity","setSelectedCity","restaurantInfo","setRestaurantInfo","handleCityChange","event","target","value","url","encodeURIComponent","fetch","then","response","json","data","results","length","placeId","place_id","console","log","detailsUrl","placeDetails","result","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","name","formatted_address","formatted_phone_number","_c","$RefreshReg$"],"sources":["/Users/CarinaYe/gaTest/homework-and-materials/carina/final/dumpling/src/components/Contact/contact.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Contact = () => {\n  const restaurantName = \"Yang’s Dumpling\";\n  const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [restaurantInfo, setRestaurantInfo] = useState(null);\n  const handleCityChange = (event) => {\n    setSelectedCity(event.target.value);\n  };\n \n  useEffect(() => {\n    if (selectedCity) {\n    const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}+${encodeURIComponent(selectedCity)}&key=${API_KEY}`;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.results.length > 0) {\n          const placeId = data.results[0].place_id;\n          console.log(data.results)\n\n          const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n\n          fetch(detailsUrl)\n          .then(response => response.json())\n          .then(placeDetails => {\n            setRestaurantInfo(placeDetails.result);\n          })\n          .catch(error => console.error(\"Error fetching place details:\", error));\n      } else {\n        console.log(\"No results found for the restaurant name.\");\n      }\n    })\n    .catch(error => console.error(\"Error fetching place search results:\", error));\n}\n}, [API_KEY, selectedCity]);\n\n  return (\n    <div>\n       <label>Select City:</label>\n       <select value={selectedCity} onChange={handleCityChange}>\n        <option value=\"\">Select a city</option>\n        <option value=\"Melbourne\">Melbourne</option>\n        <option value=\"Sydney\">Sydney</option>\n        <option value=\"Perth\">Perth</option>\n      </select>\n\n      {restaurantInfo ? (\n        <div>\n          <h1>{restaurantInfo.name}</h1>\n          <p>Address: {restaurantInfo.formatted_address}</p>\n          <p>Contact Number: {restaurantInfo.formatted_phone_number}</p>\n          {/* <p>Trading Hours: {restaurantInfo.opening_hours}</p> */}\n        </div>\n      ) : (\n        <p>Select a city to find a restaurant</p>\n      )}\n    </div>\n  );\n};\n\nexport default Contact;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const Contact = () => {\n//   const restaurantName = \"Yang’s Dumpling\";\n//   const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [restaurantInfo, setRestaurantInfo] = useState(null);\n//   const handleCityChange = (event) => {\n//     setSelectedCity(event.target.value);\n//   };\n \n//   useEffect(() => {\n//     const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}&radius=50000&key=${API_KEY}`;\n\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => {\n//         if (data.results.length > 0) {\n//           const placeId = data.results[0].place_id;\n//           console.log(data.results)\n\n//           const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n\n//           fetch(detailsUrl)\n//             .then(response => response.json())\n//             .then(placeDetails => {\n//               setRestaurantInfo(placeDetails.result);\n//             })\n//             .catch(error => console.error(\"Error fetching place details:\", error));\n//         } else {\n//           console.log(\"No results found for the restaurant name.\");\n//         }\n//       })\n//       .catch(error => console.error(\"Error fetching place search results:\", error));\n//   }, []);\n\n//   return (\n//     <div>\n//       {restaurantInfo ? (\n//         <div>\n//           <h1>{restaurantInfo.name}</h1>\n//           <p>Address: {restaurantInfo.formatted_address}</p>\n//         </div>\n//       ) : (\n//         <p>Loading restaurant information...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Contact;\n\n\n\n\n// const restaurantName = \"Yang’s Dumpling\";\n// const API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\n// const Contact = () => {\n//   console.log(API_KEY)\n//   const url = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(restaurantName)}&key=${API_KEY}`;\n\n//   fetch(url)\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log(data)\n//       if (data.results.length > 0) {\n//         const placeId = data.results[0].place_id;\n\n//         const detailsUrl = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,formatted_address,formatted_phone_number,opening_hours&key=${API_KEY}`;\n\n//         fetch(detailsUrl)\n//           .then(response => response.json())\n//           .then(placeDetails => {\n//             console.log(placeDetails)\n//             console.log(\"Place ID:\", placeId);\n//             console.log(\"Name:\", placeDetails.result.name);\n//             console.log(\"Address:\", placeDetails.result.formatted_address);\n//           })\n//           .catch(error => console.error(\"Error fetching place details:\", error));\n//       } else {\n//         console.log(\"No results found for the restaurant name.\");\n//       }\n//     })\n//     .catch(error => console.error(\"Error fetching place search results:\", error));\n// }\n\n// export default Contact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}